(ns logseq.shui.silkhq
  (:require [goog.object :refer [getValueByKeys] :as gobj]
            [logseq.shui.util :refer [component-wrap] :as util]))

(goog-define NODETEST false)

(def silkhq-wrap
  (partial component-wrap js/window.LSSilkhq))

(defn silkhq-get
  [name]
  (if NODETEST
    #js {}
    (let [path (util/get-path name)]
      (some-> js/window.LSSilkhq (gobj/getValueByKeys (clj->js path))))))

(def fixed (silkhq-wrap "Fixed.Root"))
(def fixed-content (silkhq-wrap "Fixed.Content"))

(def scroll (silkhq-wrap "Scroll.Root"))
(def scroll-trigger (silkhq-wrap "Scroll.Trigger"))
(def scroll-content (silkhq-wrap "Scroll.Content"))
(def scroll-view (silkhq-wrap "Scroll.View"))

(def sheet (silkhq-wrap "Sheet.Root"))
(def sheet-bleeding-background (silkhq-wrap "Sheet.BleedingBackground"))
(def sheet-portal (silkhq-wrap "Sheet.Portal"))
(def sheet-handle (silkhq-wrap "Sheet.Handle"))
(def sheet-content (silkhq-wrap "Sheet.Content"))
(def sheet-title (silkhq-wrap "Sheet.Title"))
(def sheet-description (silkhq-wrap "Sheet.Description"))
(def sheet-trigger (silkhq-wrap "Sheet.Trigger"))
(def sheet-outlet (silkhq-wrap "Sheet.Outlet"))
(def sheet-backdrop (silkhq-wrap "Sheet.Backdrop"))
(def sheet-view (silkhq-wrap "Sheet.View"))

(def bottom-sheet (silkhq-wrap "BottomSheet.Root"))
(def bottom-sheet-portal (silkhq-wrap "BottomSheet.Portal"))
(def bottom-sheet-handle (silkhq-wrap "BottomSheet.Handle"))
(def bottom-sheet-content (silkhq-wrap "BottomSheet.Content"))
(def bottom-sheet-title (silkhq-wrap "BottomSheet.Title"))
(def bottom-sheet-description (silkhq-wrap "BottomSheet.Description"))
(def bottom-sheet-trigger (silkhq-wrap "BottomSheet.Trigger"))
(def bottom-sheet-outlet (silkhq-wrap "BottomSheet.Outlet"))
(def bottom-sheet-backdrop (silkhq-wrap "BottomSheet.Backdrop"))
(def bottom-sheet-view (silkhq-wrap "BottomSheet.View"))

(def depth-sheet (silkhq-wrap "SheetWithDepth.Root"))
(def depth-sheet-portal (silkhq-wrap "SheetWithDepth.Portal"))
(def depth-sheet-handle (silkhq-wrap "SheetWithDepth.Handle"))
(def depth-sheet-content (silkhq-wrap "SheetWithDepth.Content"))
(def depth-sheet-title (silkhq-wrap "SheetWithDepth.Title"))
(def depth-sheet-description (silkhq-wrap "SheetWithDepth.Description"))
(def depth-sheet-trigger (silkhq-wrap "SheetWithDepth.Trigger"))
(def depth-sheet-outlet (silkhq-wrap "SheetWithDepth.Outlet"))
(def depth-sheet-backdrop (silkhq-wrap "SheetWithDepth.Backdrop"))
(def depth-sheet-view (silkhq-wrap "SheetWithDepth.View"))
(def depth-sheet-stack (silkhq-wrap "SheetWithDepthStack.Root"))
(def depth-sheet-scenery-outlets
  (silkhq-wrap "SheetWithDepthStack.SceneryOutlets" {:static? true}))

(def detent-sheet (silkhq-wrap "SheetWithDetent.Root"))
(def detent-sheet-portal (silkhq-wrap "SheetWithDetent.Portal"))
(def detent-sheet-handle (silkhq-wrap "SheetWithDetent.Handle"))
(def detent-sheet-content (silkhq-wrap "SheetWithDetent.Content"))
(def detent-sheet-title (silkhq-wrap "SheetWithDetent.Title"))
(def detent-sheet-description (silkhq-wrap "SheetWithDetent.Description"))
(def detent-sheet-trigger (silkhq-wrap "SheetWithDetent.Trigger"))
(def detent-sheet-outlet (silkhq-wrap "SheetWithDetent.Outlet"))
(def detent-sheet-backdrop (silkhq-wrap "SheetWithDetent.Backdrop"))
(def detent-sheet-view (silkhq-wrap "SheetWithDetent.View"))
(def detent-sheet-scroll (silkhq-wrap "SheetWithDetent.ScrollRoot"))
(def detent-sheet-scroll-content (silkhq-wrap "SheetWithDetent.ScrollContent"))
(def detent-sheet-scroll-view (silkhq-wrap "SheetWithDetent.ScrollView"))

(def stacking-sheet (silkhq-wrap "SheetWithStacking.Root"))
(def stacking-sheet-portal (silkhq-wrap "SheetWithStacking.Portal"))
(def stacking-sheet-handle (silkhq-wrap "SheetWithStacking.Handle"))
(def stacking-sheet-content (silkhq-wrap "SheetWithStacking.Content"))
(def stacking-sheet-title (silkhq-wrap "SheetWithStacking.Title"))
(def stacking-sheet-description (silkhq-wrap "SheetWithStacking.Description"))
(def stacking-sheet-trigger (silkhq-wrap "SheetWithStacking.Trigger"))
(def stacking-sheet-outlet (silkhq-wrap "SheetWithStacking.Outlet"))
(def stacking-sheet-backdrop (silkhq-wrap "SheetWithStacking.Backdrop"))
(def stacking-sheet-view (silkhq-wrap "SheetWithStacking.View"))
(def stacking-sheet-stack (silkhq-wrap "SheetWithStackingStack.Root"))

(def parallax-page (silkhq-wrap "ParallaxPage.Root"))
(def parallax-page-portal (silkhq-wrap "ParallaxPage.Portal"))
(def parallax-page-handle (silkhq-wrap "ParallaxPage.Handle"))
(def parallax-page-content (silkhq-wrap "ParallaxPage.Content"))
(def parallax-page-description (silkhq-wrap "ParallaxPage.Description"))
(def parallax-page-title (silkhq-wrap "ParallaxPage.Title"))
(def parallax-page-trigger (silkhq-wrap "ParallaxPage.Trigger"))
(def parallax-page-outlet (silkhq-wrap "ParallaxPage.Outlet"))
(def parallax-page-backdrop (silkhq-wrap "ParallaxPage.Backdrop"))
(def parallax-page-view (silkhq-wrap "ParallaxPage.View"))
(def parallax-page-view-portal (silkhq-wrap "ParallaxPage.ViewPortal"))
(def parallax-page-topbar-title (silkhq-wrap "ParallaxPage.TopBarTitle"))
(def parallax-page-topbar-portal (silkhq-wrap "ParallaxPage.TopBarTitlePortal"))
(def parallax-page-topbar-dismiss-trigger (silkhq-wrap "ParallaxPage.TopBarDismissTrigger"))
(def parallax-page-topbar-dismiss-trigger-portal (silkhq-wrap "ParallaxPage.TopBarDismissTriggerPortal"))

(def parallax-page-stack (silkhq-wrap "ParallaxPageStack.Root"))
(def parallax-page-stack-scenery-outlet (silkhq-wrap "ParallaxPageStack.SceneryOutlet"))
;; stack topbar components
(def parallax-page-stack-island (silkhq-wrap "ParallaxPageStack.IslandRoot"))
(def parallax-page-stack-island-content (silkhq-wrap "ParallaxPageStack.IslandContent"))
(def parallax-page-stack-topbar-dismiss-trigger-container (silkhq-wrap "ParallaxPageStack.TopBarDismissTriggerContainer"))
(def parallax-page-stack-topbar-title-outlet (silkhq-wrap "ParallaxPageStack.TopBarTitleOutlet"))
(def parallax-page-stack-topbar-title-container (silkhq-wrap "ParallaxPageStack.TopBarTitleContainer"))

(def page (silkhq-wrap "Page.Root"))
(def page-portal (silkhq-wrap "Page.Portal"))
(def page-handle (silkhq-wrap "Page.Handle"))
(def page-content (silkhq-wrap "Page.Content"))
(def page-title (silkhq-wrap "Page.Title"))
(def page-description (silkhq-wrap "Page.Description"))
(def page-trigger (silkhq-wrap "Page.Trigger"))
(def page-outlet (silkhq-wrap "Page.Outlet"))
(def page-backdrop (silkhq-wrap "Page.Backdrop"))
(def page-view (silkhq-wrap "Page.View"))

(def card-sheet (silkhq-wrap "CardSheet.Root"))
(def card-sheet-portal (silkhq-wrap "CardSheet.Portal"))
(def card-sheet-handle (silkhq-wrap "CardSheet.Handle"))
(def card-sheet-content (silkhq-wrap "CardSheet.Content"))
(def card-sheet-title (silkhq-wrap "CardSheet.Title"))
(def card-sheet-description (silkhq-wrap "CardSheet.Description"))
(def card-sheet-trigger (silkhq-wrap "CardSheet.Trigger"))
(def card-sheet-outlet (silkhq-wrap "CardSheet.Outlet"))
(def card-sheet-backdrop (silkhq-wrap "CardSheet.Backdrop"))
(def card-sheet-view (silkhq-wrap "CardSheet.View"))

(def sidebar-sheet (silkhq-wrap "Sidebar.Root"))
(def sidebar-sheet-portal (silkhq-wrap "Sidebar.Portal"))
(def sidebar-sheet-view (silkhq-wrap "Sidebar.View"))
(def sidebar-sheet-backdrop (silkhq-wrap "Sidebar.Backdrop"))
(def sidebar-sheet-content (silkhq-wrap "Sidebar.Content"))
(def sidebar-sheet-trigger (silkhq-wrap "Sidebar.Trigger"))
(def sidebar-sheet-handle (silkhq-wrap "Sidebar.Handle"))
(def sidebar-sheet-outlet (silkhq-wrap "Sidebar.Outlet"))
(def sidebar-sheet-title (silkhq-wrap "Sidebar.Title"))
(def sidebar-sheet-description (silkhq-wrap "Sidebar.Description"))

(def persistent-sheet (silkhq-wrap "PersistentSheetWithDetent.Root"))
(def persistent-sheet-portal (silkhq-wrap "PersistentSheetWithDetent.Portal"))
(def persistent-sheet-view (silkhq-wrap "PersistentSheetWithDetent.View"))
(def persistent-sheet-content (silkhq-wrap "PersistentSheetWithDetent.Content"))
(def persistent-sheet-trigger (silkhq-wrap "PersistentSheetWithDetent.Trigger"))
(def persistent-sheet-handle (silkhq-wrap "PersistentSheetWithDetent.Handle"))
(def persistent-sheet-retracted-content (silkhq-wrap "PersistentSheetWithDetent.RetractedContent"))
(def persistent-sheet-expanded-content (silkhq-wrap "PersistentSheetWithDetent.ExpandedContent"))
(def persistent-sheet-outlet (silkhq-wrap "PersistentSheetWithDetent.Outlet"))
(def persistent-sheet-title (silkhq-wrap "PersistentSheetWithDetent.Title"))
(def persistent-sheet-description (silkhq-wrap "PersistentSheetWithDetent.Description"))
